pipeline {
  agent any

  stages {

    stage('Send Start Alert') {
      steps {
        script {
          telegramSend(
            token: '5451305173:AAGSmRL_518hBsPx3N_Zih_cy0oeMbZhpyI',
            chatId: '-688306623',
            message: "The job RP1 Build and Test has started and is currently running."
          )
        }
      }
    }

    // Building and Testing the application.
    stage('Install') {
      steps {
        sh '''
        sudo apt-get update
        sudo apt purge npm
        sudo apt install npm -y
        sudo docker info
        '''
        echo 'necessary updates and installation check completed>>>'
      }
    }

    stage('Build') {
      steps {

        sh'''
        docker rm -f dvna-app
        docker rmi dvna-sne22-rp1
        '''

        echo 'purged previous build instances!!!'
        echo 'now building container image>>>'

        sh '''
        docker build -t dvna-sne22-rp1 -f Dockerfile-dev .
        '''

        echo 'container image successfully built!'
      }
    }
    
    // Testing the container run-time
    stage('Test') {
      steps {
        sh 'docker-compose -f docker-compose.yml '
        echo 'application started'
      }
    }
    
    // Security scan using Snyk
    stage('Security Scan') {
      steps {
        snykSecurity additionalArguments: '--docker dvna-sne2-rp1',failOnError: false, failOnIssues: false, snykInstallation: 'Snyk', snykTokenId: 'Snyk-Jenkins', targetFile: 'Dockerfile'
      }
    }  
    
    /*
    // Pushing application and it's artifacts to container repository
    stage('Push') {
      steps {
        echo 'now pushing working image to dockerhub...'
        sh 'docker login -u rp1sne22 -p dckr_pat_gi6co2PnC5xTtoElVINANoHAAt4 docker.io'
        sh 'docker tag my-webapp rp1sne22/my-webapp:latest'
        sh 'docker push rp1sne22/my-webapp:latest'
        echo 'container image push was successfull>>>'
      }
    }
    
    // Deleting the container from the jenkins agent node
    stage('Cleanup') {
      steps {
        echo 'initializing test server cleanup...'
        sh 'docker rm -f $(docker ps -a -q)'
        echo 'removed container runtime'
        sh 'docker image prune'
        echo 'removed docker image'
      }
    }
  
*/
  }
}
